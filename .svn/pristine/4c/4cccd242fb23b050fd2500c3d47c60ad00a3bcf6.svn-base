package com.zhy.modules.summary.service.impl;

import com.zhy.common.utils.CommonUtil;
import com.zhy.common.utils.DateUtils;
import com.zhy.modules.summary.entity.SummaryHourEntity;
import io.lettuce.core.dynamic.annotation.Value;
import net.sf.json.JSONObject;
import org.springframework.stereotype.Service;

import java.util.*;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.baomidou.mybatisplus.service.impl.ServiceImpl;
import com.zhy.common.utils.PageUtils;
import com.zhy.common.utils.Query;

import com.zhy.modules.summary.dao.SummaryMonthDao;
import com.zhy.modules.summary.entity.SummaryMonthEntity;
import com.zhy.modules.summary.service.SummaryMonthService;


@Service("summaryMonthService")
public class SummaryMonthServiceImpl extends ServiceImpl<SummaryMonthDao, SummaryMonthEntity> implements SummaryMonthService {

    @Override
    public PageUtils queryPage(Map<String, Object> params) {
        Page<SummaryMonthEntity> page = this.selectPage(
                new Query<SummaryMonthEntity>(params).getPage(),
                new EntityWrapper<SummaryMonthEntity>()
        );

        return new PageUtils(page);
    }

    @Override
    public JSONObject selectMonthPower(int startMonth, int endMonth) {
        EntityWrapper<SummaryMonthEntity> w = new EntityWrapper<>();
        w.ge("month", startMonth);
        w.le("month", endMonth);
        w.orderBy("month asc");
        List<SummaryMonthEntity> list = selectList(w);
        JSONObject obj = new JSONObject();
        List<Double> month = new ArrayList<Double>();
        List<Double> datas = new ArrayList<Double>();
        List<Double> maxPowerDemand = new ArrayList<Double>();
		List<String> maxDemandTime = new ArrayList<String>();
        //int maxPower = 0;
        for(int i = 0 ; i < list.size(); i++){
            SummaryMonthEntity entity = list.get(i);
            month.add(CommonUtil.getDoubleValue(entity.getmonth()));
            datas.add(CommonUtil.getValue(entity.getmonth_power()));
            maxPowerDemand.add(CommonUtil.getValue(entity.getmonth_power()));
            maxDemandTime.add(DateUtils.getYearMonthDay(entity.getmonth_max_demand_time()));
        }
        CommonUtil.add2Json(obj, "month", month);
        CommonUtil.add2Json(obj, "datas", datas);
        CommonUtil.add2Json(obj, "maxPowerDemand", maxPowerDemand);
        CommonUtil.add2Json(obj, "maxDemandTime", maxDemandTime);
        //obj.put("maxY", maxPower);
        return obj;
    }

    @Override
    public JSONObject selectMonthFee(int startMonth, int endMonth) {
        EntityWrapper<SummaryMonthEntity> w = new EntityWrapper<>();
        w.ge("month", startMonth);
        w.le("month", endMonth);
        w.orderBy("month asc");
        List<SummaryMonthEntity> list = selectList(w);
        JSONObject obj = new JSONObject();
        List<Double> month = new ArrayList<Double>();
        List<Double> datas = new ArrayList<Double>();
        //int maxPower = 0;
        for(int i = 0 ; i < list.size(); i++){
            SummaryMonthEntity entity = list.get(i);
            month.add(CommonUtil.getDoubleValue(entity.getmonth()));
            datas.add(CommonUtil.getValue(entity.getmonth_fee()));
        }
        CommonUtil.add2Json(obj, "month", month);
        CommonUtil.add2Json(obj, "datas", datas);
        return obj;
    }


}
